name: CI
on:
  push:
    branches: [ "main" ]
env:
  upstream_version: v0.10.3
  etke_version: etke1
  bunny_version: v0.1.0
permissions:
  checks: write
  contents: write
  packages: write
  pull-requests: read
jobs:
  build-publish:
    name: Build and Publish
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            registry.etke.cc/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=raw,value=${{ env.upstream_version }}-${{ env.etke_version }},enable=${{ github.ref_name == 'main' }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-deploy:
    name: Build and Release
    needs: build-publish
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }} # as this job depends on the build-publish and build-publish always publishes the latest tag
    steps:
      - uses: actions/checkout@v4
      - name: Configure
        run: |
          mv /app ./public
      - name: Upload
        run: |
          wget -O bunny-upload.tar.gz https://github.com/etkecc/bunny-upload/releases/download/${{ env.bunny_version }}/bunny-upload_Linux_x86_64.tar.gz
          tar -xzf bunny-upload.tar.gz
          echo "${{ secrets.BUNNY_CONFIG }}" > bunny-config.yaml
          ./bunny-upload -c bunny-config.yaml
